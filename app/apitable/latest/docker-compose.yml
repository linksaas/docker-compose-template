version: "3.9"

services:
  web-server:
    image: apitable/web-server:latest
    restart: always
    env_file:
      - env
    expose:
      - "8080"

  imageproxy-server:
    image: apitable/imageproxy-server:latest
    restart: always
    expose:
      - "8080"
    environment:
      - TZ=Asia/Shanghai
      - BASEURL=http://minio:9000

  backend-server:
    image: apitable/backend-server:latest
    restart: always
    env_file:
      - env
    expose:
      - "8081"
    environment:
      - TZ=Asia/Shanghai
      - DEFAULT_TIME_ZONE=Asia/Shanghai
    depends_on:
      init-db:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "curl -sS 'http://localhost:8081' || exit 1"]
      interval: 5s
      timeout: 5s
      start_period: 30s
      retries: 60

  room-server:
    image: apitable/room-server:latest
    restart: always
    expose:
      - "3333"
      - "3334"
      - "3001"
      - "3002"
      - "3006"
      - "3005"
      - "3007"
    env_file:
      - env
    environment:
      - TZ=Asia/Shanghai
      - NODE_ENV=apitable
      - NODE_OPTIONS=--max-old-space-size=2048 --max-http-header-size=80000
      - API_MAX_MODIFY_RECORD_COUNTS=30
      - INSTANCE_MAX_MEMORY=4096M
      - ENABLE_SOCKET=true
    depends_on:
      mysql:
        condition: service_healthy

  # Third Party Dockers
  gateway:
    image: apitable/openresty:latest
    restart: always
    ports:
      - ${PORT}:80
    environment:
      - TZ=Asia/Shanghai
    depends_on:
      web-server:
        condition: service_started
      imageproxy-server:
        condition: service_started
      backend-server:
        condition: service_healthy
      room-server:
        condition: service_started
      init-appdata:
        condition: service_completed_successfully

  minio:
    container_name: minio
    image: minio/minio:RELEASE.2023-01-25T00-19-54Z
    restart: always
    command: server --console-address ":9001" /data
    expose:
      - "9000"
      - "9001"
<% if (storage == true) { _%> 
    volumes:
      - ${MINIO_DATA_PATH}:/data
      - ${MINIO_CONFIG_PATH}:/root/.minio
<% } _%>
    environment:
      - MINIO_ACCESS_KEY=apitable
      - MINIO_SECRET_KEY=apitable_com
      - MINIO_ROOT_USER=apitable
      - MINIO_ROOT_PASSWORD=apitable_com
      - TZ=Asia/Shanghai
    healthcheck:
      test: ["CMD-SHELL", "curl -sS 'http://localhost:9000' || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 30

  redis:
    container_name: redis
    image: redis:7.0.8
    restart: always
    command:
      [
          "redis-server",
          "--appendonly",
          "yes",
          "--requirepass",
          "apitable_com",
      ]
    expose:
      - "6379"
<% if (storage == true) { _%> 
    volumes:
      - ${REDIS_DATA_PATH}:/data
<% } _%>
    environment:
      - TZ=Asia/Shanghai

  mysql:
    container_name: mysql
    image: mysql:8.0.32
    restart: always
<% if (storage == true) { _%>
    volumes:
      - ${MYSQL_DATA_PATH}:/var/lib/mysql
<% } _%>
    expose:
      - "3306"
    environment:
      - MYSQL_ROOT_PASSWORD=apitable_com
      - MYSQL_DATABASE=apitable
      - TZ=Asia/Shanghai
    command: --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --sql_mode=IGNORE_SPACE,NO_ENGINE_SUBSTITUTION
      --lower_case_table_names=2
    healthcheck:
      test: "mysql apitable -uroot -papitable_com -e 'SELECT 1;'"
      interval: 5s
      timeout: 5s
      start_period: 30s
      retries: 60

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11.9-management
    restart: always
<% if (storage == true) { _%>
    volumes:
      - ${RABBITMQ_DATA_PATH}:/var/lib/rabbitmq
<% } _%>
    expose:
      - "5671"
      - "5672"
      - "15672"
    environment:
      - RABBITMQ_DEFAULT_USER=apitable
      - RABBITMQ_DEFAULT_PASS=apitable_com

  # init data
  init-db:
    image: apitable/init-db:latest
    environment:
      - TZ=Asia/Shanghai
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=apitable
      - DB_USERNAME=root
      - DB_PASSWORD=apitable_com
      - DATABASE_TABLE_PREFIX=apitable_
      - ACTION=update
    depends_on:
      mysql:
        condition: service_healthy

  # init-appdata
  init-appdata:
    image: apitable/init-appdata:latest
    env_file:
      - env
    depends_on:
      mysql:
        condition: service_healthy
      init-db:
        condition: service_completed_successfully
